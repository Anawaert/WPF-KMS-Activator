<Page x:Class="Activator.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:v="clr-namespace:Activator.Views"
      xmlns:vm="clr-namespace:Activator.ViewModels"
      xmlns:cvter="clr-namespace:Activator.Converters"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      mc:Ignorable="d" 
      d:DataContext="{d:DesignInstance Type=vm:SettingsViewModels, IsDesignTimeCreatable=True}"
      d:DesignHeight="1080" d:DesignWidth="960"
      Title="SettingsPage">
    
    <!-- 长期更新页，未来将加入更多功能 -->
    <!-- Long-term update page, more functions will be added in the future -->
    
    <!-- 需要改为 IoC 方式 -->
    <Page.DataContext>
        <vm:SettingsViewModels></vm:SettingsViewModels>
    </Page.DataContext>
    
    <!-- 在设置页面加载时执行读取设置信息的命令 -->
    <!-- Execute the command to read the settings information when the settings page is loaded -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadSettingsCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <StackPanel Orientation="Vertical">
            <ui:TextBlock Text="系统信息" FontTypography="Subtitle" Margin="0,0,0,10"></ui:TextBlock>

            <ui:CardControl Margin="0,0,0,10">
                <ui:CardControl.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <ui:TextBlock Grid.Row="0" FontTypography="Body" Text="Microsoft Windows 产品名称"></ui:TextBlock>
                        <ui:TextBlock Grid.Row="1" Text="将显示当前系统的产品名称而非版本" 
                                      Foreground="{ui:ThemeResource ResourceKey=TextFillColorSecondaryBrush}">
                        </ui:TextBlock>
                    </Grid>
                </ui:CardControl.Header>

                <StackPanel Orientation="Vertical">
                    <!-- 当 WindowsProduct 未指定时，暂时利用枚举的特性显示“不支持” -->
                    <!-- When WindowsProduct is not specified, temporarily use the characteristics of the enumeration to display "Unsupported" -->
                    <ui:TextBlock x:Name="windowsVersionTextBlock" Background="Transparent" 
                                  Text="{Binding WindowsProduct}">
                    </ui:TextBlock>
                </StackPanel>
            </ui:CardControl>

            <ui:CardControl Margin="0,0,0,10">
                <ui:CardControl.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <ui:TextBlock Grid.Row="0" FontTypography="Body" Text="Microsoft Office 版本"></ui:TextBlock>
                        <ui:TextBlock Grid.Row="1" Text="将显示当前系统已经安装的 Microsoft Office 版本" 
                                Foreground="{ui:ThemeResource ResourceKey=TextFillColorSecondaryBrush}">
                        </ui:TextBlock>
                    </Grid>
                </ui:CardControl.Header>

                <StackPanel Orientation="Vertical">
                    <ui:TextBlock x:Name="officeVersionTextBlock" Background="Transparent"
                                  Text="{Binding OfficeEdition}">
                    </ui:TextBlock>
                </StackPanel>
            </ui:CardControl>

            <ui:CardControl Margin="0,0,0,10">
                <ui:CardControl.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <ui:TextBlock Grid.Row="0" FontTypography="Body" Text="Anawaert KMS Activator 版本"></ui:TextBlock>
                        <ui:TextBlock Grid.Row="1" Text="将显示当前运行程序的版本" 
                            Foreground="{ui:ThemeResource ResourceKey=TextFillColorSecondaryBrush}">
                        </ui:TextBlock>
                    </Grid>
                </ui:CardControl.Header>

                <StackPanel Orientation="Vertical">
                    <ui:TextBlock x:Name="activatorVersionTextBlock" Background="Transparent"
                                  Text="{Binding ActivatorVersion}">
                    </ui:TextBlock>
                </StackPanel>
            </ui:CardControl>


            <ui:CardExpander Margin="0,0,0,10" IsExpanded="True">
                <ui:CardExpander.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <ui:TextBlock Grid.Row="0" FontTypography="Body" Text="系统信息操作"></ui:TextBlock>

                        <ui:TextBlock Grid.Row="1" Foreground="{ui:ThemeResource ResourceKey=TextFillColorSecondaryBrush}"
                                      Text="可执行与系统信息相关的一些操作">
                        </ui:TextBlock>
                    </Grid>
                </ui:CardExpander.Header>


                <ui:Anchor Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                               Background="Transparent" BorderThickness="0" CornerRadius="0">
                    <Grid>
                        <ui:Button x:Name="refreshSystemInfoButton" Grid.Column="1" Content="刷新系统信息" Cursor="Hand"
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   Command="{Binding UpdateInfoToSettingsCommand}">
                        </ui:Button>
                    </Grid>
                </ui:Anchor>

            </ui:CardExpander>


            <ui:TextBlock Text="通用" FontTypography="Subtitle" Margin="0,0,0,10"></ui:TextBlock>

            <ui:CardControl Margin="0,0,0,10">
                <ui:CardControl.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <ui:TextBlock Grid.Row="0" FontTypography="Body" Text="检查更新"></ui:TextBlock>
                        <ui:TextBlock Grid.Row="1" Text="开启后将在每次程序启动时检查是否有新版本可用" 
                                      Foreground="{ui:ThemeResource ResourceKey=TextFillColorSecondaryBrush}">
                        </ui:TextBlock>
                    </Grid>
                </ui:CardControl.Header>

                <StackPanel Orientation="Vertical">
                    <ui:ToggleSwitch IsChecked="{Binding IsUpdateCheckEnabled}" IsThreeState="False">
                        <!-- 当该 ToggleSwitch 的状态发生变化时，都会执行保存设置的命令 -->
                        <!-- When the state of this ToggleSwitch changes, the command to save the settings will be executed -->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ui:ToggleSwitch>
                </StackPanel>
            </ui:CardControl>

            <ui:CardExpander Margin="0,0,0,10" IsExpanded="True">
                <ui:CardExpander.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <ui:TextBlock Grid.Row="0" FontTypography="Body" Text="主题"></ui:TextBlock>

                        <ui:TextBlock Grid.Row="1" Foreground="{ui:ThemeResource ResourceKey=TextFillColorSecondaryBrush}"
                                      Text="选择不同颜色模式的主题">
                        </ui:TextBlock>
                    </Grid>
                </ui:CardExpander.Header>

                <StackPanel Orientation="Vertical">
                    <RadioButton Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Command="{Binding SwitchToLightThemeModeCommand}"
                                 IsThreeState="False" IsChecked="{Binding IsLightThemeMode}">
                        <!-- 当该 RadioButton 的状态发生变化时，都会执行保存设置的命令，下同 -->
                        <!-- When the state of this RadioButton changes, the command to save the settings will be executed, and so on -->
                        <!-- **可简化** -->
                        <!-- **Can be simplified** -->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        
                        <StackPanel Orientation="Horizontal" MaxHeight="16" >
                            <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="2" Margin="0,0,8,0" Width="16">
                                <Border.Background>
                                    <SolidColorBrush Color="#FAFAFA"></SolidColorBrush>
                                </Border.Background>
                            </Border>

                            <TextBlock Text="浅色模式（默认）"></TextBlock>
                        </StackPanel>
                    </RadioButton>

                    <RadioButton Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Command="{Binding SwitchToDarkThemeModeCommand}"
                                 IsThreeState="False" IsChecked="{Binding IsDarkThemeMode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="Unchecked">
                                <i:InvokeCommandAction Command="{Binding SaveSettingsCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <StackPanel Orientation="Horizontal" MaxHeight="16">
                            <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="2" Margin="0,0,8,0" Width="16">
                                <Border.Background>
                                    <SolidColorBrush Color="#202020"></SolidColorBrush>
                                </Border.Background>
                            </Border>

                            <TextBlock Text="深色模式"></TextBlock>
                        </StackPanel>
                    </RadioButton>
                </StackPanel>
            </ui:CardExpander>
        </StackPanel>
    </Grid>
</Page>
